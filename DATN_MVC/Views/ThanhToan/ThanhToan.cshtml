
@model DATN_MVC.Models.Modeltong
@{
    ViewData["Title"] = "ThanhToan";
    Layout = "~/Views/Shared/_Layout.cshtml";
   
}
<!DOCTYPE html>
<html lang="vi">
<head>
    <meta charset="UTF-8">
    <title>Thông tin Giao hàng và Thanh toán</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            margin: 40px;
            background-color: #f9f9f9;
        }

        h2 {
            color: #333;
        }

        .section {
            background-color: #fff;
            padding: 20px;
            margin-bottom: 20px;
            border-radius: 10px;
            box-shadow: 0 0 10px #ddd;
        }

        label {
            display: block;
            margin-top: 10px;
        }

        input, select {
            width: 100%;
            padding: 8px;
            margin-top: 4px;
            border: 1px solid #ccc;
            border-radius: 6px;
        }

        .radio-group {
            margin-top: 10px;
        }

            .radio-group label {
                display: block;
            }

        .summary {
            margin-top: 20px;
        }

            .summary span {
                display: block;
                margin: 5px 0;
            }

        button {
            padding: 10px 20px;
            font-size: 16px;
            background-color: #c90000;
            color: #fff;
            border: none;
            border-radius: 6px;
            cursor: pointer;
        }

            button:hover {
                background-color: #a30000;
            }
    </style>
</head>
<body>


    <div class="section">

        <h5>Địa Chỉ Giao Hàng</h5>
        <label>
            Họ và tên người nhận
            <input type="text" value="@Model.NguoiDung.TenNguoiDung">
        </label>
        <label>
            Email
            <input type="email" value="@Model.NguoiDung.Email">
        </label>
        <label>
            Số điện thoại
            <input type="text" value="@Model.NguoiDung.SoDienThoai">
        </label>
        <label>
            Quốc gia
            <select>
                <option selected>Việt Nam</option>
            </select>
        </label>
        <label>
            Tỉnh/Thành phố
            <select id="province" onchange="loadDistricts()">
                <option>-- Chọn tỉnh --</option>
            </select>
        </label>

        <label>
            Quận/Huyện
            <select id="district" onchange="loadWards()">
                <option>-- Chọn huyện --</option>
            </select>
        </label>

        <label>
            Phường/Xã
            <select id="ward">
                <option>-- Chọn xã --</option>
            </select>
        </label>
       
        <label>
            Địa chỉ nhận hàng
            <input type="text" name="Diachi" value="@Model.NguoiDung.DiaChi">
        </label>
        @if (Model.ThongTins.Count > 0)
        {
            @foreach (var item in Model.ThongTins)
            {
                <div>
                    <p><strong>Mã sách:</strong> @item.MaSach</p>
                    <p><strong>Số lượng:</strong> @item.SoLuong</p>
                    <p><strong>Giá:</strong> @item.GiaBan </p>
                    <img src="@Url.Content(item.HinhAnh)" alt="Alternate Text" />
                </div>
            }
        }
        else
        {
            <p>Không có sản phẩm nào trong giỏ hàng.</p>
        }
       

    </div>

 
    <div class="section">
        <h5>Phương Thức Vận Chuyển</h5>
        <p><strong>Giao hàng tiêu chuẩn:</strong> 32.000 đ (Dự kiến giao: Thứ Bảy - 19/04)</p>
    </div>

    <div class="section">
        <h5>Phương Thức Thanh Toán</h5>
        <div class="radio-group">
            <label><input type="radio" name="payment"> Ví ZaloPay - Giảm 15K cho đơn hàng từ 300K (Nhập mã: ZLPFAHASA)</label>
            <label><input type="radio" name="payment"> VNPay</label>
            <label><input type="radio" name="payment"> Ví ShopeePay - Giảm 20K cho đơn hàng từ 30K</label>
            <label><input type="radio" name="payment"> Ví Momo</label>
            <label><input type="radio" name="payment"> ATM / Internet Banking</label>
            <label><input type="radio" name="payment"> Visa / Master / JCB</label>
            <label><input type="radio" name="payment"> Thanh toán bằng tiền mặt khi nhận hàng</label>
        </div>
    </div>
 
    <div class="section summary">
        <h5>Tóm Tắt Đơn Hàng</h5>
        <span>Thành tiền: 172.500 đ</span>
        <span>Phí vận chuyển: 32.000 đ</span>
        <strong>Tổng Số Tiền (gồm VAT): 210.500 đ</strong>
        <br><br>
        <button class="btn-pay" onclick="showQR()">Xác nhận thanh toán</button>
        <div id="qr-container" style="display:none; margin-top: 20px;">
            <h3>Quét mã QR để thanh toán bằng MB Bank</h3>
            <img src="https://img.vietqr.io/image/970422-05205418042004-compact2.png?amount=204500&addInfo=Thanh%20toan%20don%20hang%20%23123"
                 alt="QR Code MB Bank"
                 width="200" height="200" />
        </div>
        <style>
            .btn-pay {
                background-color: red;
                color: white;
                padding: 10px 20px;
                font-size: 18px;
                border: none;
                border-radius: 5px;
                cursor: pointer;
            }
        </style>

        <script>
            function showQR() {
                document.getElementById("qr-container").style.display = "block";
            }
        </script>
    </div>
    <script>
        async function loadProvinces() {
            const res = await fetch("https://provinces.open-api.vn/api/p/");
            const provinces = await res.json();
            const select = document.getElementById("province");
            provinces.forEach(p => {
                const opt = document.createElement("option");
                opt.value = p.code;
                opt.text = p.name;
                select.appendChild(opt);
            });
        }

        async function loadDistricts() {
            const provinceCode = document.getElementById("province").value;
            const res = await fetch(`https://provinces.open-api.vn/api/p/${provinceCode}?depth=2`);
            const data = await res.json();
            const districtSelect = document.getElementById("district");
            districtSelect.innerHTML = '<option>-- Chọn huyện --</option>';
            document.getElementById("ward").innerHTML = '<option>-- Chọn xã --</option>';

            data.districts.forEach(d => {
                const opt = document.createElement("option");
                opt.value = d.code;
                opt.text = d.name;
                districtSelect.appendChild(opt);
            });
        }

        async function loadWards() {
            const districtCode = document.getElementById("district").value;
            const res = await fetch(`https://provinces.open-api.vn/api/d/${districtCode}?depth=2`);
            const data = await res.json();
            const wardSelect = document.getElementById("ward");
            wardSelect.innerHTML = '<option>-- Chọn xã --</option>';
            data.wards.forEach(w => {
                const opt = document.createElement("option");
                opt.text = w.name;
                wardSelect.appendChild(opt);
            });
        }
        // Gọi khi trang load
        loadProvinces();
    </script>
   
</body>

</html>
