@model DATN_MVC.Models.Modeltong
@{
	ViewData["Title"] = "Giỏ Hàng";
	Layout = "~/Views/Shared/_Layout.cshtml";
	var nguoiDungId = Context.Session.GetString("NguoiDungId");


}
<!DOCTYPE html>
<html lang="vi">
<head>
	<meta charset="UTF-8">
	<title>Giỏ Hàng</title>

	<link href="https://fonts.googleapis.com/css2?family=Roboto&display=swap" rel="stylesheet">

	<style>
		body {
			font-family: 'Roboto', sans-serif;
		}

		.card h6,
		h6 {
			font-size: 15px;
		}

		.btn-outline-primary,
		.btn-danger {
			border-radius: 999px;
		}

		.rounded-4 {
			border-radius: 1rem !important;
		}

		.shadow-sm {
			box-shadow: 0 0.125rem 0.25rem rgba(0, 0, 0, 0.075) !important;
		}

		.button-container {
			display: flex;
			align-items: center;
			justify-content: center;
			font-family: Arial, sans-serif;
		}

		.rounded-circle {
			display: inline-flex;
			align-items: center;
			justify-content: center;
			width: 40px;
			height: 40px;
			background-color: #3498db;
			color: white;
			font-size: 20px;
			border: none;
			border-radius: 50%;
			cursor: pointer;
			transition: background-color 0.3s ease;
		}

			.rounded-circle:hover {
				background-color: #2980b9;
			}

		.mx-2 {
			margin: 0 10px;
			font-size: 20px;
		}

		.btn-pay {
			background: linear-gradient(135deg, #ff416c, #ff4b2b);
			color: white;
			border: none;
			border-radius: 999px;
			padding: 12px 0;
			font-size: 16px;
			font-weight: bold;
			transition: all 0.3s ease;
			box-shadow: 0 4px 12px rgba(255, 65, 108, 0.3);
		}

			.btn-pay:hover {
				background: linear-gradient(135deg, #ff4b2b, #ff416c);
				box-shadow: 0 6px 16px rgba(255, 65, 108, 0.5);
				transform: translateY(-1px);
			}
	</style>
	<style>
		.quantity-wrapper {
			display: inline-flex;
			align-items: center;
			border: 1px solid #ccc;
			border-radius: 30px;
			overflow: hidden;
			width: fit-content;
			background-color: #f8f9fa;
		}

		.quantity-btn {
			background-color: #e74c3c;
			color: white;
			border: none;
			padding: 6px 12px;
			font-size: 18px;
			cursor: pointer;
			transition: background-color 0.3s ease;
		}

			.quantity-btn:hover {
				background-color: #c0392b;
			}

		.quantity-number {
			min-width: 40px;
			text-align: center;
			display: inline-block;
			font-size: 16px;
			font-weight: 500;
			padding: 0 10px;
			background-color: white;
		}

	</style>

	<script>
		function toggleAll(source) {
			const checkboxes = document.querySelectorAll('.item-checkbox');
			checkboxes.forEach(cb => cb.checked = source.checked);
		}
	</script>


</head>
<body class="bg-light">

	<div class="container py-4">
		<h4 class="mb-4 fw-bold">🛒 GIỎ HÀNG</h4>
		<div class="row g-4">
		
			<div class="col-lg-8">
				<div class="bg-white rounded-4 p-3 shadow-sm border">
					<div class="d-flex align-items-center mb-3">
						<input class="form-check-input me-2" type="checkbox" onclick="toggleAll(this)">
						<label class="form-check-label fw-semibold">Chọn tất cả (1 sản phẩm)</label>
					</div>

					<!-- Lặp qua danh sách sản phẩm trong giỏ hàng -->
					@for (int i = 0; i < Model.GioHangs.Count; i++)
					{
						var item = Model.GioHangs[i];
						<div class="d-flex align-items-start border-top pt-3">
							<form asp-action="ThayDoiGio" asp-controller="GioHang" method="post" class="quantity-form" id="form-@item.MaSach">
								<!-- Checkbox để chọn sản phẩm -->
								<input class="form-check-input mt-2 me-3 item-checkbox product-checkbox" id="checkbox-@item.MaSach" data-masach="@item.MaSach" data-magiohang="@item.MaGioHang" type="checkbox" checked>

								<img src="@Url.Content(item.HinhAnh)" class="me-3 rounded-3" width="80" alt="@item.TenSach" />

								<div class="flex-grow-1">
									<h6 class="mb-1 fw-medium">@item.TenSach</h6>

									<div class="quantity-wrapper mt-2">
										<!-- Thay đổi số lượng -->
										<button type="submit" name="SoLuong" value="@Math.Max(item.SoLuong - 1, 1)" class="quantity-btn">−</button>
										<span class="quantity-number" id="quantity-@item.MaSach">@item.SoLuong</span>
										<button type="submit" name="SoLuong" value="@Math.Min(item.SoLuong + 1, 100)" class="quantity-btn">+</button>
										<input type="hidden" name="MaSach" value="@item.MaSach" />
										<input type="hidden" name="magiohang" value="@item.MaGioHang" />
										<input type="hidden" name="SoLuong" id="input-quantity-@item.MaSach" value="@item.SoLuong" />
									</div>
								</div>

								<!-- Giá của sản phẩm -->
								<div class="text-danger fw-bold fs-6" id="price-@item.MaSach">@item.GiaBan đ</div>
							</form>
						</div>
					}
				</div>
			</div>

			<!-- Cột phải: Thanh toán -->
			<div class="col-lg-4">
				<div class="bg-white rounded-4 p-3 shadow-sm border">
				
					<div class="d-flex justify-content-between mb-3">
						<strong class="fs-6">Tổng Số Tiền</strong>
						<strong class="tong-tien" name="tongtien">@Model.GioHangs.Sum(g => g.GiaBan * g.SoLuong) đ</strong>
					</div>
					<form asp-controller="ThanhToan" asp-action="ThanhToan" method="post" id="payment-form">
						
						<div  id="selected-magiohangs"></div>
						<button type="submit" class="btn-pay w-100">THANH TOÁN</button>
					</form>
				</div>
			</div>
		</div>
	</div>
		<form asp-controller="GioHang" asp-action="XoaGioHang" method="post" id="clear-cart-form">
			<input type="hidden" name="NguoiDungId" value="@Context.Session.GetString("NguoiDungId")" />
			<input type="hidden" name="DanhSachMaSach" id="DanhSachMaSach" /> <!-- Gộp tại đây -->
			<button type="submit" id="clear-cart" class="btn btn-danger">Xóa giỏ hàng</button>
		</form>
@* 	xóa giỏ hàng *@
	<script>
			document.getElementById('clear-cart-form').addEventListener('submit', function (e) {
				// Lấy tất cả checkbox được chọn
				const selectedMasach = Array.from(document.querySelectorAll('.product-checkbox:checked'))
					.map(cb => cb.dataset.masach);

				// Đưa danh sách vào input ẩn dưới dạng JSON chuỗi
				document.getElementById('DanhSachMaSach').value = JSON.stringify(selectedMasach);
			});
		</script>
	<script>
		document.getElementById('clear-cart-form').addEventListener('submit', function (e) {
			// Lấy tất cả checkbox được chọn
			const selectedMasach = Array.from(document.querySelectorAll('.product-checkbox:checked'))
				.map(cb => cb.dataset.masach); // Lấy danh sách mã sách từ data-masach

			// Nếu không có sản phẩm nào được chọn, ngừng form submit
			if (selectedMasach.length === 0) {
				alert('Vui lòng chọn ít nhất một sản phẩm để xóa.');
				e.preventDefault();
				return;
			}

			// Đưa danh sách vào input ẩn dưới dạng chuỗi JSON
			document.getElementById('DanhSachMaSach').value = JSON.stringify(selectedMasach);
		});

	</script>

	
@*  Script cập nhật tổng tiền theo checkbox (updateTotalPrice) *@
	<script>
		function updateTotalPrice() {
			var total = 0;
			document.querySelectorAll('.product-checkbox:checked').forEach(function (checkbox) {
				var maSach = checkbox.getAttribute('data-masach');
				var quantity = document.getElementById('input-quantity-' + maSach).value;
				var price = document.getElementById('price-' + maSach).textContent;

				total += parseInt(price) * parseInt(quantity);
			});
			document.querySelector('.tong-tien').textContent = total + ' đ';
		}

		// Gán sự kiện checkbox
		document.querySelectorAll('.product-checkbox').forEach(function (checkbox) {
			checkbox.addEventListener('change', updateTotalPrice);
		});

		// Chọn tất cả checkbox
		function toggleAll(source) {
			document.querySelectorAll('.product-checkbox').forEach(function (checkbox) {
				checkbox.checked = source.checked;
			});
			updateTotalPrice();
		}
	</script>

	@*   Script xử lý thanh toán với checkbox được chọn (updateSelectedBooks) *@
	<script>
		document.getElementById("payment-form").addEventListener("submit", function (e) {
			const checkedCheckboxes = document.querySelectorAll(".product-checkbox:checked");
			const container = document.getElementById("selected-magiohangs");

			// Xoá các input cũ nếu có
			container.innerHTML = "";

			if (checkedCheckboxes.length === 0) {
				alert("Vui lòng chọn ít nhất 1 sản phẩm để thanh toán!");
				e.preventDefault();
				return;
			}

			const uniqueMaGioHang = new Set(); // Để không bị trùng

			checkedCheckboxes.forEach(cb => {
				const maSach = cb.dataset.masach;
				const form = document.getElementById("form-" + maSach);
				const maGioHang = form.querySelector('input[name="magiohang"]').value;
				uniqueMaGioHang.add(maGioHang); // Lưu MaGioHang duy nhất
			});

			// Tạo input cho mỗi MaGioHang duy nhất
			uniqueMaGioHang.forEach(mg => {
				const input = document.createElement("input");
				input.type = "hidden";
				input.name = "MaGioHang"; // Đây là tên list trong controller
				input.value = mg;
				container.appendChild(input);
			});
		});
	</script>

</body>

</html>



